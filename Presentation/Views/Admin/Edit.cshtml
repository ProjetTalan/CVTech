@using Domaine.Entities
@model Presentation.ViewModels.AdminViewModels.EditProfileViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
	<h4>CivilState</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.RoleNumber, "Profile Role", htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.DropDownListFor(model => model.RoleNumber, EnumHelper.GetSelectList(typeof(Role)), null, htmlAttributes: new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.RoleNumber, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Save" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
